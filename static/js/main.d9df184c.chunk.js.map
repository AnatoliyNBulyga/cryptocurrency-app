{"version":3,"sources":["images/cryptocurrency.png","componets/Navbar.jsx","services/cryptoApi.js","services/cryptoNewsApi.js","componets/Loader.jsx","componets/News.jsx","componets/HomePage.jsx","componets/Exchanges.jsx","componets/Cryptocurrencies.jsx","componets/LineChart.jsx","componets/CryptoDetails.jsx","App.js","app/store.js","index.js"],"names":["Navbar","useState","activeMenu","setActiveMenu","screenSize","setScreenSize","useEffect","handleResize","window","innerWidth","addEventListener","removeEventListener","className","src","icon","size","Title","level","to","onClick","MenuOutlined","theme","Item","HomeOutlined","FundOutlined","MoneyCollectOutlined","BuildOutlined","cryptoApiHeaders","createRequest","url","headers","cryptoApi","createApi","reducerPath","baseQuery","fetchBaseQuery","baseUrl","endpoints","builder","getCryptos","query","count","getCryptoDetails","coinId","getCryptoHistory","timeperiod","getExchanges","useGetCryptosQuery","useGetCryptoDetailsQuery","useGetCryptoHistoryQuery","useGetExchangesQuery","cryptoNewsHeaders","cryptoNewsApi","getCryptoNews","newsCategory","useGetCryptoNewsQuery","Loader","Text","Typography","Option","Select","demoImage","News","simplified","setNewsCategory","cryptoNews","data","value","gutter","span","showSearch","optionFilterProp","onChange","filterOption","input","option","children","toLowerCase","indexOf","coins","map","coin","name","news","i","xs","sm","lg","hoverable","href","target","rel","style","maxWidth","maxHeight","image","thumbnail","contentUrl","alt","description","substring","provider","moment","datePublished","startOf","fromNow","HomePage","isFetching","globalStats","stats","title","total","millify","totalExchanges","totalMarketCap","total24hVolume","totalMarkets","Panel","Collapse","Exchanges","exchangesList","exchanges","exchange","showArrow","header","rank","iconUrl","volume","numberOfMarkets","marketShare","id","HTMLReactParser","Cryptocurrencies","cryptosList","cryptos","setCryptos","searchTerm","setSearchTerm","filteredData","filter","includes","placeholder","e","currency","extra","price","marketCap","change","LineChart","coinHistory","currentPrice","coinName","coinPrice","coinTimestamp","history","length","push","Date","timestamp","toLocaleDateString","labels","datasets","label","fill","backgroundColor","borderColor","options","scales","yAxes","ticks","beginAtZero","CryptoDetails","useParams","setTimePeriod","cryptoDetails","DollarCircleOutlined","NumberOutlined","ThunderboltOutlined","allTimeHigh","TrophyOutlined","genericStats","numberOfExchanges","approvedSupply","CheckOutlined","StopOutlined","ExclamationCircleOutlined","totalSupply","circulatingSupply","slug","defaultValue","date","links","link","type","App","exact","path","color","textAlign","configureStore","reducer","ReactDOM","render","store","document","getElementById"],"mappings":"mVAAe,MAA0B,2C,OCyD1BA,EAlDA,WACX,MAAoCC,oBAAS,GAA7C,mBAAOC,EAAP,KAAmBC,EAAnB,KACA,EAAoCF,mBAAS,MAA7C,mBAAOG,EAAP,KAAmBC,EAAnB,KAeA,OAbAC,qBAAU,WACN,IAAMC,EAAe,kBAAMF,EAAcG,OAAOC,aAGhD,OAFAD,OAAOE,iBAAiB,SAAUH,GAClCA,IACO,kBAAMC,OAAOG,oBAAoB,SAAUJ,MACnD,IACHD,qBAAU,WAEFH,IADAC,EAAa,QAKlB,CAACA,IAEA,sBAAKQ,UAAU,gBAAf,UACI,sBAAKA,UAAU,iBAAf,UACI,cAAC,IAAD,CAAQC,IAAKC,EAAMC,KAAK,UACxB,cAAC,IAAWC,MAAZ,CAAkBC,MAAO,EAAGL,UAAU,OAAtC,SACI,cAAC,IAAD,CAAMM,GAAG,IAAT,0BAEJ,cAAC,IAAD,CAAQN,UAAU,yBAAyBO,QAAS,kBAAMhB,GAAeD,IAAzE,SACI,cAACkB,EAAA,EAAD,SAIJlB,GACI,eAAC,IAAD,CAAMmB,MAAM,OAAZ,UACI,cAAC,IAAKC,KAAN,CAAWR,KAAM,cAACS,EAAA,EAAD,IAAjB,SACI,cAAC,IAAD,CAAML,GAAG,IAAT,oBAEJ,cAAC,IAAKI,KAAN,CAAWR,KAAM,cAACU,EAAA,EAAD,IAAjB,SACI,cAAC,IAAD,CAAMN,GAAG,oBAAT,gCAEJ,cAAC,IAAKI,KAAN,CAAWR,KAAM,cAACW,EAAA,EAAD,IAAjB,SACI,cAAC,IAAD,CAAMP,GAAG,aAAT,yBAEJ,cAAC,IAAKI,KAAN,CAAWR,KAAM,cAACY,EAAA,EAAD,IAAjB,SACI,cAAC,IAAD,CAAMR,GAAG,QAAT,2B,2DC9CtBS,EAAmB,CACrB,kBAAmB,8BACnB,iBAAkB,sDAKhBC,EAAgB,SAACC,GAAD,MAAU,CAACA,MAAKC,QAASH,IAElCI,EAAYC,YAAU,CAC/BC,YAAa,YACbC,UAAWC,YAAe,CAACC,QANf,wCAOZC,UAAW,SAACC,GAAD,MAAc,CACrBC,WAAYD,EAAQE,MAAM,CACtBA,MAAO,SAACC,GAAD,OAAWb,EAAc,gBAAD,OAAiBa,OAEpDC,iBAAkBJ,EAAQE,MAAM,CAC5BA,MAAO,SAACG,GAAD,OAAYf,EAAc,SAAD,OAAUe,OAE9CC,iBAAkBN,EAAQE,MAAM,CAC5BA,MAAO,gBAAEG,EAAF,EAAEA,OAAQE,EAAV,EAAUA,WAAV,OAA0BjB,EAAc,SAAD,OAAUe,EAAV,oBAA4BE,OAE9EC,aAAcR,EAAQE,MAAM,CACxBA,MAAO,kBAAMZ,EAAc,qBAMnCmB,EAIAhB,EAJAgB,mBACAC,EAGAjB,EAHAiB,yBACAC,EAEAlB,EAFAkB,yBACAC,EACAnB,EADAmB,qB,oCC/BEC,EAAoB,CACtB,iBAAkB,OAClB,kBAAmB,mCACnB,iBAAkB,sDAOTC,EAAgBpB,YAAU,CACnCC,YAAa,gBACbC,UAAWC,YAAe,CAACC,QANf,8CAOZC,UAAW,SAACC,GAAD,MAAc,CACrBe,cAAef,EAAQE,MAAM,CACzBA,MAAO,gBAAEc,EAAF,EAAEA,aAAcb,EAAhB,EAAgBA,MAAhB,MAPa,CAACZ,IAO2B,iBAAD,OAAkByB,EAAlB,8DAAoFb,GAPzGX,QAASqB,UAa3CI,EACAH,EADAG,sB,SCfWC,EANA,kBACX,qBAAK5C,UAAU,SAAf,SACI,cAAC,IAAD,OCGD6C,EAAeC,IAAfD,KAAMzC,EAAS0C,IAAT1C,MACN2C,EAAUC,IAAVD,OACDE,EAAY,sEAuDHC,EArDF,SAAC,GAAkB,IAAD,EAAhBC,EAAgB,EAAhBA,WACX,EAAwC9D,mBAAS,kBAAjD,mBAAOqD,EAAP,KAAqBU,EAArB,KACaC,EAAcV,EAAsB,CAACD,eAAcb,MAAOsB,EAAa,EAAI,KAAjFG,KACAA,EAAQnB,EAAmB,KAA3BmB,KAEP,OAAI,OAACD,QAAD,IAACA,OAAD,EAACA,EAAYE,OAEb,eAAC,IAAD,CAAKC,OAAQ,CAAC,GAAI,IAAlB,WACML,GACE,cAAC,IAAD,CAAKM,KAAM,GAAX,SACI,eAAC,IAAD,CACEC,YAAU,EACV1D,UAAU,cACV2D,iBAAiB,WACjBC,SAAU,SAACL,GAAD,OAAWH,EAAgBG,IACrCM,aAAc,SAACC,EAAOC,GAAR,OAAmBA,EAAOC,SAASC,cAAcC,QAAQJ,EAAMG,gBAAkB,GALjG,UAOI,cAAClB,EAAD,CAAQQ,MAAM,iBAAd,4BAPJ,OAQKD,QARL,IAQKA,GARL,UAQKA,EAAMA,YARX,aAQK,EAAYa,MAAMC,KAAI,SAACC,GAAD,OAAU,cAACtB,EAAD,CAAQQ,MAAOc,EAAKC,KAApB,SAA2BD,EAAKC,eAKzEjB,EAAWE,MAAMa,KAAI,SAACG,EAAMC,GAAP,uBACjB,cAAC,IAAD,CAAKC,GAAI,GAAIC,GAAI,GAAIC,GAAI,EAAzB,SACI,cAAC,IAAD,CAAMC,WAAS,EAAC5E,UAAU,YAA1B,SACI,oBAAG6E,KAAMN,EAAKtD,IAAK6D,OAAO,SAASC,IAAI,aAAvC,UACI,sBAAK/E,UAAU,uBAAf,UACI,cAAC,EAAD,CAAOA,UAAU,aAAaK,MAAO,EAArC,SAAyCkE,EAAKD,OAC9C,qBAAKU,MAAO,CAACC,SAAU,QAASC,UAAW,SAAUjF,KAAS,OAAJsE,QAAI,IAAJA,GAAA,UAAAA,EAAMY,aAAN,mBAAaC,iBAAb,eAAwBC,aAAcpC,EAAWqC,IAAI,YAEnH,4BACKf,EAAKgB,YAAc,IAAnB,UACQhB,EAAKgB,YAAYC,UAAU,EAAG,KADtC,QAEKjB,EAAKgB,cAGf,sBAAKvF,UAAU,qBAAf,UACG,gCACI,cAAC,IAAD,CAAQC,KAAK,UAAAsE,EAAKkB,SAAS,UAAd,mBAAkBN,aAAlB,mBAAyBC,iBAAzB,eAAoCC,aAAcpC,EAAWqC,IAAI,WAC9E,cAACzC,EAAD,CAAM7C,UAAU,gBAAhB,mBAAkCuE,EAAKkB,SAAS,UAAhD,aAAkC,EAAkBnB,UAExD,cAACzB,EAAD,UAAO6C,IAAOnB,EAAKoB,eAAeC,QAAQ,MAAMC,qBAlB9BrB,SAnBlB,cAAC,EAAD,KCsBpBsB,EA7BE,WACb,IAAO1F,EAAS0C,IAAT1C,MACP,EAA2B+B,EAAmB,IAAvCmB,EAAP,EAAOA,KAAMyC,EAAb,EAAaA,WACPC,EAAW,OAAG1C,QAAH,IAAGA,OAAH,EAAGA,EAAMA,KAAK2C,MAC/B,OAAIF,EAAmB,cAAC,EAAD,IAEpB,qCACK,cAAC3F,EAAD,CAAOC,MAAO,EAAGL,UAAU,UAA3B,iCACA,eAAC,IAAD,WACI,cAAC,IAAD,CAAKyD,KAAM,GAAX,SAAe,cAAC,IAAD,CAAWyC,MAAM,yBAAyB3C,MAAOyC,EAAYG,UAC5E,cAAC,IAAD,CAAK1C,KAAM,GAAX,SAAe,cAAC,IAAD,CAAWyC,MAAM,kBAAkB3C,MAAO6C,IAAQJ,EAAYK,oBAC7E,cAAC,IAAD,CAAK5C,KAAM,GAAX,SAAe,cAAC,IAAD,CAAWyC,MAAM,mBAAmB3C,MAAO6C,IAAQJ,EAAYM,oBAC9E,cAAC,IAAD,CAAK7C,KAAM,GAAX,SAAe,cAAC,IAAD,CAAWyC,MAAM,mBAAmB3C,MAAO6C,IAAQJ,EAAYO,oBAC9E,cAAC,IAAD,CAAK9C,KAAM,GAAX,SAAe,cAAC,IAAD,CAAWyC,MAAM,gBAAgB3C,MAAO6C,IAAQJ,EAAYQ,qBAEhF,sBAAKxG,UAAU,yBAAf,UACI,cAACI,EAAD,CAAOC,MAAO,EAAGL,UAAU,aAA3B,kDACA,cAACI,EAAD,CAAOC,MAAO,EAAGL,UAAU,YAA3B,SAAuC,cAAC,IAAD,CAAMM,GAAG,oBAAT,4BAE3C,cAAC,GAAD,CAAkB6C,YAAU,IAC5B,sBAAKnD,UAAU,yBAAf,UACI,cAACI,EAAD,CAAOC,MAAO,EAAGL,UAAU,aAA3B,gCACA,cAACI,EAAD,CAAOC,MAAO,EAAGL,UAAU,YAA3B,SAAuC,cAAC,IAAD,CAAMM,GAAG,QAAT,4BAE3C,cAAC,EAAD,CAAM6C,YAAU,Q,oBC1BnBN,GAASC,IAATD,KACA4D,GAAUC,KAAVD,MA8COE,GA5CG,WAAO,IAAD,EACpB,EAA6BrE,IAArBgB,EAAR,EAAQA,KAAMyC,EAAd,EAAcA,WACRa,EAAa,OAAGtD,QAAH,IAAGA,GAAH,UAAGA,EAAMA,YAAT,aAAG,EAAYuD,UAElC,OAAId,EAAmB,cAAC,EAAD,IAGnB,qCACI,eAAC,IAAD,WACI,cAAC,IAAD,CAAKtC,KAAM,EAAX,uBACA,cAAC,IAAD,CAAKA,KAAM,EAAX,8BACA,cAAC,IAAD,CAAKA,KAAM,EAAX,qBACA,cAAC,IAAD,CAAKA,KAAM,EAAX,uBAEJ,cAAC,IAAD,UACKmD,EAAcxC,KAAI,SAAC0C,GAAD,OACf,cAAC,IAAD,CAAKrD,KAAM,GAAX,SACI,cAAC,KAAD,UACI,cAACgD,GAAD,CAEIM,WAAW,EACXC,OACI,eAAC,IAAD,WACI,eAAC,IAAD,CAAKvD,KAAM,EAAX,UACI,cAAC,GAAD,UAAM,mCAASqD,EAASG,KAAlB,SACN,cAAC,IAAD,CAAQjH,UAAU,iBAAiBC,IAAK6G,EAASI,UACjD,cAAC,GAAD,UAAM,iCAASJ,EAASxC,YAE5B,eAAC,IAAD,CAAKb,KAAM,EAAX,cAAgB2C,IAAQU,EAASK,WACjC,cAAC,IAAD,CAAK1D,KAAM,EAAX,SAAe2C,IAAQU,EAASM,mBAChC,eAAC,IAAD,CAAK3D,KAAM,EAAX,UAAe2C,IAAQU,EAASO,aAAhC,SARMP,EAASQ,IAJ3B,SAgBKC,aAAgBT,EAASvB,aAAe,KAfpCuB,EAASQ,iB,UCmB/BE,GAzCU,SAAC,GAAkB,IAAjBrE,EAAgB,EAAhBA,WAEvB,EAAwChB,EAD1BgB,EAAa,GAAK,KACnBsE,EAAb,EAAOnE,KAAmByC,EAA1B,EAA0BA,WAC1B,EAA8B1G,mBAAS,IAAvC,mBAAOqI,EAAP,KAAgBC,EAAhB,KACA,EAAoCtI,mBAAS,IAA7C,mBAAOuI,EAAP,KAAmBC,EAAnB,KAQA,OAPAnI,qBAAU,WAAO,IAAD,EAENoI,EAAY,OAAGL,QAAH,IAAGA,GAAH,UAAGA,EAAanE,YAAhB,aAAG,EAAmBa,MAAM4D,QAAO,SAAC1D,GAAD,OAAUA,EAAKC,KAAKL,cAAc+D,SAASJ,EAAW3D,kBAE3G0D,EAAWG,KAEZ,CAACL,EAAaG,IACb7B,EAAmB,cAAC,EAAD,IAEnB,sCACM5C,GACE,qBAAKnD,UAAU,gBAAf,SACI,cAAC,KAAD,CAAOiI,YAAY,wBAAwB1E,MAAOqE,EAAYhE,SAAU,SAACsE,GAAD,OAAOL,EAAcK,EAAEpD,OAAOvB,YAG9G,cAAC,IAAD,CAAKC,OAAQ,CAAC,GAAI,IAAKxD,UAAU,wBAAjC,gBACK0H,QADL,IACKA,OADL,EACKA,EAAStD,KAAI,SAAC+D,GAAD,OACV,cAAC,IAAD,CAAK1D,GAAI,GAAIC,GAAI,GAAIC,GAAI,EAAG3E,UAAU,cAAtC,SACI,cAAC,IAAD,CAAMM,GAAE,kBAAa6H,EAASb,IAA9B,SACI,eAAC,IAAD,CACIpB,MAAK,UAAKiC,EAASlB,KAAd,aAAuBkB,EAAS7D,MACrC8D,MAAO,qBAAKpI,UAAU,eAAeC,IAAKkI,EAASjB,UACnDtC,WAAS,EAHb,UAKI,wCAAWwB,IAAQ+B,EAASE,UAC5B,6CAAgBjC,IAAQ+B,EAASG,cACjC,+CAAkBlC,IAAQ+B,EAASI,QAAnC,aAT6CJ,EAASb,a,gFCzB9ElH,I,OAAU0C,IAAV1C,OAkDOoI,GAhDG,SAAC,GAIf,IAJ4D,IAAD,EAA1CC,EAA0C,EAA1CA,YAAaC,EAA6B,EAA7BA,aAAcC,EAAe,EAAfA,SACtCC,EAAY,GACZC,EAAgB,GAEbrE,EAAI,EAAGA,GAAC,OAAGiE,QAAH,IAAGA,GAAH,UAAGA,EAAanF,YAAhB,iBAAG,EAAmBwF,eAAtB,aAAG,EAA4BC,QAAQvE,IAAK,CAAC,IAAD,QACzDoE,EAAUI,KAAV,OAAeP,QAAf,IAAeA,GAAf,UAAeA,EAAanF,YAA5B,aAAe,EAAmBwF,QAAQtE,GAAG6D,OAC7CQ,EAAcG,KAAK,IAAIC,KAAJ,OAASR,QAAT,IAASA,GAAT,UAASA,EAAanF,YAAtB,aAAS,EAAmBwF,QAAQtE,GAAG0E,WAAWC,sBAGzE,IAAM7F,EAAO,CACT8F,OAAQP,EACRQ,SAAU,CACN,CACIC,MAAO,eACPhG,KAAMsF,EACNW,MAAM,EACNC,gBAAiB,UACjBC,YAAa,aAiBzB,OACI,qCACI,eAAC,IAAD,CAAKzJ,UAAU,eAAf,UACI,eAAC,GAAD,CAAOK,MAAO,EAAGL,UAAU,cAA3B,UAA0C2I,EAA1C,mBACA,eAAC,IAAD,CAAK3I,UAAU,kBAAf,UACI,eAAC,GAAD,CAAOK,MAAO,EAAGL,UAAU,eAA3B,4BAAmDyI,QAAnD,IAAmDA,GAAnD,UAAmDA,EAAanF,YAAhE,aAAmD,EAAmBiF,OAAtE,OACA,eAAC,GAAD,CAAOlI,MAAO,EAAGL,UAAU,gBAA3B,qBAAoD2I,EAApD,aAAwED,WAGhF,cAAC,KAAD,CAAMpF,KAAMA,EAAMoG,QArBV,CACZC,OAAQ,CACJC,MAAO,CACH,CACIC,MAAO,CACHC,aAAa,aCX7B1J,GAAgB0C,IAAhB1C,MAAOyC,GAASC,IAATD,KACRE,GAAUC,IAAVD,OAqGQgH,GAnGO,WAAO,IAAD,QACjBhI,EAAUiI,cAAVjI,OACP,EAAoC1C,mBAAS,MAA7C,mBAAO4C,EAAP,KAAmBgI,EAAnB,KACA,EAA2B7H,EAAyBL,GAA7CuB,EAAP,EAAOA,KAAMyC,EAAb,EAAaA,WACC0C,EAAgBpG,EAAyB,CAAEN,SAAQE,eAAzDqB,KACF4G,EAAa,OAAG5G,QAAH,IAAGA,GAAH,UAAGA,EAAMA,YAAT,aAAG,EAAYe,KAElC,GAAI0B,EAAY,OAAO,cAAC,EAAD,IAEvB,IAEME,EAAQ,CACV,CAAEC,MAAO,eAAgB3C,MAAM,KAAD,OAAO2G,EAAc7B,OAASjC,IAAQ8D,EAAc7B,QAAUnI,KAAM,cAACiK,GAAA,EAAD,KAClG,CAAEjE,MAAO,OAAQ3C,MAAO2G,EAAcjD,KAAM/G,KAAM,cAACkK,GAAA,EAAD,KAClD,CAAElE,MAAO,aAAc3C,MAAM,KAAD,OAAO2G,EAAc/C,QAAUf,IAAQ8D,EAAc/C,SAAWjH,KAAM,cAACmK,GAAA,EAAD,KAClG,CAAEnE,MAAO,aAAc3C,MAAM,KAAD,OAAO2G,EAAc5B,WAAalC,IAAQ8D,EAAc5B,YAAcpI,KAAM,cAACiK,GAAA,EAAD,KACxG,CAAEjE,MAAO,4BAA6B3C,MAAM,KAAD,OAAO6C,IAAQ8D,EAAcI,YAAYjC,QAAUnI,KAAM,cAACqK,GAAA,EAAD,MAGlGC,EAAe,CACjB,CAAEtE,MAAO,oBAAqB3C,MAAO2G,EAAc9C,gBAAiBlH,KAAM,cAACU,EAAA,EAAD,KAC1E,CAAEsF,MAAO,sBAAuB3C,MAAO2G,EAAcO,kBAAmBvK,KAAM,cAACW,EAAA,EAAD,KAC9E,CAAEqF,MAAO,kBAAmB3C,MAAO2G,EAAcQ,eAAiB,cAACC,GAAA,EAAD,IAAoB,cAACC,GAAA,EAAD,IAAkB1K,KAAM,cAAC2K,GAAA,EAAD,KAC9G,CAAE3E,MAAO,eAAgB3C,MAAM,KAAD,OAAO6C,IAAQ8D,EAAcY,cAAgB5K,KAAM,cAAC2K,GAAA,EAAD,KACjF,CAAE3E,MAAO,qBAAsB3C,MAAM,KAAD,OAAO6C,IAAQ8D,EAAca,oBAAsB7K,KAAM,cAAC2K,GAAA,EAAD,MAGjG,OACI,eAAC,IAAD,CAAK7K,UAAU,wBAAf,UACI,eAAC,IAAD,CAAKA,UAAU,yBAAf,UACI,eAAC,GAAD,CAAOK,MAAO,EAAGL,UAAU,YAA3B,iBACKsD,QADL,IACKA,GADL,UACKA,EAAMA,YADX,aACK,EAAYe,KAAKC,KADtB,YAC8BhB,QAD9B,IAC8BA,GAD9B,UAC8BA,EAAMA,YADpC,aAC8B,EAAYe,KAAK2G,KAD/C,aAGA,8BAAId,EAAc5F,KAAlB,sFAEJ,cAAC,IAAD,CACI2G,aAAa,KACbjL,UAAU,oBACViI,YAAY,oBACZrE,SAAU,SAACL,GAAD,OAAW0G,EAAc1G,IAJvC,SA1BK,CAAC,KAAM,MAAO,KAAM,MAAO,KAAM,KAAM,KAAM,MAgCxCa,KAAI,SAAC8G,GAAD,OAAU,cAAC,GAAD,UAAoBA,GAAPA,QAErC,cAAC,GAAD,CACIzC,YAAaA,EACbC,aAActC,IAAQ8D,EAAc7B,OACpCM,SAAUuB,EAAc5F,OAE5B,eAAC,IAAD,CAAKtE,UAAU,kBAAf,UACI,eAAC,IAAD,CAAKA,UAAU,wBAAf,UACI,eAAC,IAAD,CAAKA,UAAU,gCAAf,UACI,eAAC,GAAD,CAAOK,MAAO,EAAGL,UAAU,uBAA3B,UAAmDkK,EAAc5F,KAAjE,uBACA,uEAA0C4F,EAAc5F,KAAxD,6EAEH2B,EAAM7B,KAAI,gBAAGlE,EAAH,EAAGA,KAAMgG,EAAT,EAASA,MAAO3C,EAAhB,EAAgBA,MAAhB,OACP,eAAC,IAAD,CAAKvD,UAAU,aAAf,UACI,eAAC,IAAD,CAAKA,UAAU,kBAAf,UACI,cAAC,GAAD,UAAOE,IACP,cAAC,GAAD,UAAOgG,OAEX,cAAC,GAAD,CAAMlG,UAAU,QAAhB,SAAyBuD,aAIrC,eAAC,IAAD,CAAKvD,UAAU,mBAAf,UACI,eAAC,IAAD,CAAKA,UAAU,gCAAf,UACI,cAAC,GAAD,CAAOK,MAAO,EAAGL,UAAU,uBAA3B,8BACA,uEAA0CkK,EAAc5F,KAAxD,6EAEHkG,EAAapG,KAAI,gBAAGlE,EAAH,EAAGA,KAAMgG,EAAT,EAASA,MAAO3C,EAAhB,EAAgBA,MAAhB,OACd,eAAC,IAAD,CAAKvD,UAAU,aAAf,UACI,eAAC,IAAD,CAAKA,UAAU,kBAAf,UACI,cAAC,GAAD,UAAOE,IACP,cAAC,GAAD,UAAOgG,OAEX,cAAC,GAAD,CAAMlG,UAAU,QAAhB,SAAyBuD,gBAKzC,eAAC,IAAD,CAAKvD,UAAU,iBAAf,UACI,eAAC,IAAD,CAAKA,UAAU,YAAf,UACI,eAAC,GAAD,CAAOK,MAAO,EAAGL,UAAU,uBAA3B,qBAA2DkK,EAAc5F,KAAzE,OACCiD,aAAgB2C,EAAc3E,gBAEnC,eAAC,IAAD,CAAKvF,UAAU,aAAf,UACI,eAAC,GAAD,CAAOK,MAAO,EAAGL,UAAU,uBAA3B,UAAmDkK,EAAc5F,KAAjE,YADJ,UAEK4F,EAAciB,aAFnB,aAEK,EAAqB/G,KAAI,SAACgH,GAAD,OACtB,eAAC,IAAD,CAAKpL,UAAU,YAAf,UACI,cAAC,GAAD,CAAOK,MAAO,EAAGL,UAAU,YAA3B,SAAwCoL,EAAKC,OAC7C,mBAAGxG,KAAMuG,EAAKnK,IAAK6D,OAAO,SAASC,IAAI,aAAvC,SAAqDqG,EAAK9G,SAF9B8G,EAAK9G,mBC9D9CgH,GA5CH,WACR,OACI,sBAAKtL,UAAU,MAAf,UACI,qBAAKA,UAAU,SAAf,SACI,cAAC,EAAD,MAEJ,sBAAKA,UAAU,OAAf,UACG,cAAC,IAAD,UACI,qBAAKA,UAAU,SAAf,SACE,eAAC,IAAD,WACI,cAAC,IAAD,CAAOuL,OAAK,EAACC,KAAK,IAAlB,SACI,cAAC,EAAD,MAEJ,cAAC,IAAD,CAAOD,OAAK,EAACC,KAAK,aAAlB,SACI,cAAC,GAAD,MAEJ,cAAC,IAAD,CAAOD,OAAK,EAACC,KAAK,oBAAlB,SACI,cAAC,GAAD,MAEJ,cAAC,IAAD,CAAOD,OAAK,EAACC,KAAK,kBAAlB,SACI,cAAC,GAAD,MAEJ,cAAC,IAAD,CAAOD,OAAK,EAACC,KAAK,QAAlB,SACI,cAAC,EAAD,aAKb,sBAAKxL,UAAU,SAAf,UACI,eAAC,IAAWI,MAAZ,CAAkBC,MAAO,EAAG2E,MAAO,CAACyG,MAAO,QAASC,UAAW,UAA/D,yBACgB,uBADhB,yBAIA,eAAC,IAAD,WACI,cAAC,IAAD,CAAMpL,GAAG,IAAT,kBACA,cAAC,IAAD,CAAMA,GAAG,aAAT,uBACA,cAAC,IAAD,CAAMA,GAAG,QAAT,+B,kBCvCTqL,gBAAe,CAC1BC,SAAO,oBACFzK,EAAUE,YAAcF,EAAUyK,SADhC,eAEFpJ,EAAcnB,YAAcmB,EAAcoJ,SAFxC,K,OCEXC,IAASC,OACL,cAAC,IAAD,UACI,cAAC,IAAD,CAAUC,MAAOA,GAAjB,SACI,cAAC,GAAD,QAGRC,SAASC,eAAe,W","file":"static/js/main.d9df184c.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/cryptocurrency.1548aced.png\";","import React, {useState, useEffect} from 'react';\r\nimport {Button, Menu, Typography, Avatar} from \"antd\";\r\nimport {Link} from 'react-router-dom';\r\nimport {HomeOutlined, MoneyCollectOutlined, BuildOutlined, FundOutlined, MenuOutlined} from '@ant-design/icons';\r\n\r\nimport icon from '../images/cryptocurrency.png';\r\n\r\nconst Navbar = () => {\r\n    const [activeMenu, setActiveMenu] = useState(true);\r\n    const [screenSize, setScreenSize] = useState(null);\r\n\r\n    useEffect(() => {\r\n        const handleResize = () => setScreenSize(window.innerWidth);\r\n        window.addEventListener('risize', handleResize);\r\n        handleResize();\r\n        return () => window.removeEventListener('resize', handleResize);\r\n    }, []);\r\n    useEffect(() => {\r\n        if (screenSize < 768) {\r\n            setActiveMenu(false);\r\n        } else {\r\n            setActiveMenu(true)\r\n        }\r\n    }, [screenSize])\r\n    return (\r\n        <div className=\"nav-container\">\r\n            <div className=\"logo-container\">\r\n                <Avatar src={icon} size=\"large\"/>\r\n                <Typography.Title level={2} className=\"logo\">\r\n                    <Link to=\"/\">Cryptovese</Link>\r\n                </Typography.Title>\r\n                <Button className=\"menu-control-container\" onClick={() => setActiveMenu(!activeMenu)}>\r\n                    <MenuOutlined />\r\n                </Button>\r\n            </div>\r\n            {\r\n                activeMenu && (\r\n                    <Menu theme=\"dark\">\r\n                        <Menu.Item icon={<HomeOutlined/>}>\r\n                            <Link to=\"/\">Home</Link>\r\n                        </Menu.Item>\r\n                        <Menu.Item icon={<FundOutlined/>}>\r\n                            <Link to=\"/cryptocurrencies\">Cryptocurrencies</Link>\r\n                        </Menu.Item>\r\n                        <Menu.Item icon={<MoneyCollectOutlined/>}>\r\n                            <Link to=\"/exchanges\">Exchanges</Link>\r\n                        </Menu.Item>\r\n                        <Menu.Item icon={<BuildOutlined/>}>\r\n                            <Link to=\"/news\">News</Link>\r\n                        </Menu.Item>\r\n                    </Menu>\r\n                )\r\n            }\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Navbar;","import {createApi, fetchBaseQuery} from '@reduxjs/toolkit/query/react';\r\n\r\nconst cryptoApiHeaders = {\r\n    'x-rapidapi-host': 'coinranking1.p.rapidapi.com',\r\n    'x-rapidapi-key': '2f498df0f8msh4c0ca1a1d3a1f58p183674jsn14179dd68689'\r\n}\r\n\r\nconst baseUrl = 'https://coinranking1.p.rapidapi.com';\r\n\r\nconst createRequest = (url) => ({url, headers: cryptoApiHeaders});\r\n\r\nexport const cryptoApi = createApi({\r\n    reducerPath: 'cryptoApi',\r\n    baseQuery: fetchBaseQuery({baseUrl}),\r\n    endpoints: (builder) => ({\r\n        getCryptos: builder.query({\r\n            query: (count) => createRequest(`/coins?limit=${count}`)\r\n        }),\r\n        getCryptoDetails: builder.query({\r\n            query: (coinId) => createRequest(`/coin/${coinId}`)\r\n        }),\r\n        getCryptoHistory: builder.query({\r\n            query: ({coinId, timeperiod}) => createRequest(`/coin/${coinId}/history/${timeperiod}`)\r\n        }),\r\n        getExchanges: builder.query({\r\n            query: () => createRequest('/exchanges')\r\n        })\r\n    })\r\n});\r\n\r\nexport const {\r\n    useGetCryptosQuery,\r\n    useGetCryptoDetailsQuery,\r\n    useGetCryptoHistoryQuery,\r\n    useGetExchangesQuery\r\n} = cryptoApi;","import {createApi, fetchBaseQuery} from '@reduxjs/toolkit/query/react';\r\nimport {cryptoApi} from \"./cryptoApi\";\r\n\r\nconst cryptoNewsHeaders = {\r\n    'x-bingapis-sdk': 'true',\r\n    'x-rapidapi-host': 'bing-news-search1.p.rapidapi.com',\r\n    'x-rapidapi-key': '2f498df0f8msh4c0ca1a1d3a1f58p183674jsn14179dd68689'\r\n}\r\n\r\nconst baseUrl = 'https://bing-news-search1.p.rapidapi.com/';\r\n\r\nconst createRequest = (url) => ({url, headers: cryptoNewsHeaders});\r\n\r\nexport const cryptoNewsApi = createApi({\r\n    reducerPath: 'cryptoNewsApi',\r\n    baseQuery: fetchBaseQuery({baseUrl}),\r\n    endpoints: (builder) => ({\r\n        getCryptoNews: builder.query({\r\n            query: ({newsCategory, count}) => createRequest(`news/search?q=${newsCategory}&safeSearch=Off&textFormat=Raw&freshness=Day&count=${count}`)\r\n        })\r\n    })\r\n});\r\n\r\nexport const {\r\n    useGetCryptoNewsQuery\r\n} = cryptoNewsApi;\r\n","import React from 'react';\r\nimport { Spin } from 'antd';\r\n\r\nconst Loader = () => (\r\n    <div className=\"loader\">\r\n        <Spin />\r\n    </div>\r\n);\r\n\r\nexport default Loader;","import React, {useState} from 'react';\r\nimport {Select, Typography, Row, Col, Avatar, Card} from \"antd\";\r\nimport moment from 'moment';\r\n\r\nimport {cryptoNewsApi, useGetCryptoNewsQuery} from \"../services/cryptoNewsApi\";\r\nimport {useGetCryptosQuery} from \"../services/cryptoApi\";\r\nimport Loader from \"./Loader\";\r\n\r\nconst {Text, Title} = Typography;\r\nconst {Option} = Select;\r\nconst demoImage = 'http://coinrevolution.com/wp-content/uploads/2020/06/cryptonews.jpg';\r\n\r\nconst News = ({simplified}) => {\r\n    const [newsCategory, setNewsCategory] = useState('Cryptocurrency')\r\n    const {data: cryptoNews} = useGetCryptoNewsQuery({newsCategory, count: simplified ? 6 : 12});\r\n    const {data} = useGetCryptosQuery(100);\r\n\r\n    if (!cryptoNews?.value) return <Loader />;\r\n    return (\r\n        <Row gutter={[24, 24]}>\r\n            {!simplified && (\r\n                <Col span={24}>\r\n                    <Select\r\n                      showSearch\r\n                      className=\"select-news\"\r\n                      optionFilterProp=\"children\"\r\n                      onChange={(value) => setNewsCategory(value)}\r\n                      filterOption={(input, option) => option.children.toLowerCase().indexOf(input.toLowerCase()) >= 0}\r\n                    >\r\n                        <Option value=\"Cryptocurrency\">Cryptocurrency</Option>\r\n                        {data?.data?.coins.map((coin) => <Option value={coin.name}>{coin.name}</Option>)}\r\n                    </Select>\r\n                </Col>\r\n            )}\r\n            {\r\n                cryptoNews.value.map((news, i) => (\r\n                    <Col xs={24} sm={12} lg={8} key={i}>\r\n                        <Card hoverable className=\"news-card\">\r\n                            <a href={news.url} target=\"_blank\" rel=\"noreferrer\">\r\n                                <div className=\"news-image-container\">\r\n                                    <Title className=\"news-title\" level={4}>{news.name}</Title>\r\n                                    <img style={{maxWidth: '200px', maxHeight: '100px'}} src={news?.image?.thumbnail?.contentUrl || demoImage} alt=\"news\"/>\r\n                                </div>\r\n                                <p>\r\n                                    {news.description > 100\r\n                                        ? `${news.description.substring(0, 100)} ...`\r\n                                        : news.description\r\n                                    }\r\n                                </p>\r\n                                <div className=\"provider-container\">\r\n                                   <div>\r\n                                       <Avatar src={news.provider[0]?.image?.thumbnail?.contentUrl || demoImage} alt=\"avatar\" />\r\n                                       <Text className=\"provider-name\" >{news.provider[0]?.name}</Text>\r\n                                   </div>\r\n                                   <Text>{moment(news.datePublished).startOf('ss').fromNow()}</Text>\r\n                                </div>\r\n                            </a>\r\n                        </Card>\r\n                    </Col>\r\n                ))\r\n            }\r\n        </Row>\r\n    );\r\n};\r\n\r\nexport default News;","import React from 'react';\r\nimport millify from \"millify\";\r\nimport {Typography, Row, Col, Statistic} from 'antd';\r\nimport {useGetCryptosQuery} from \"../services/cryptoApi\";\r\nimport {Link} from \"react-router-dom\";\r\nimport {Cryptocurrencies} from \"./index\";\r\nimport News from \"./News\";\r\nimport Loader from \"./Loader\";\r\n\r\n\r\nconst HomePage = () => {\r\n    const {Title} = Typography;\r\n    const {data, isFetching} = useGetCryptosQuery(10);\r\n    const globalStats = data?.data.stats;\r\n    if (isFetching) return <Loader />;\r\n    return (\r\n       <>\r\n            <Title level={2} className=\"heading\">Global Crypto Stats</Title>\r\n            <Row>\r\n                <Col span={12}><Statistic title=\"Total Cryptocurrencies\" value={globalStats.total}/></Col>\r\n                <Col span={12}><Statistic title=\"Total Exchanges\" value={millify(globalStats.totalExchanges)} /></Col>\r\n                <Col span={12}><Statistic title=\"Total Market Cap\" value={millify(globalStats.totalMarketCap)}/></Col>\r\n                <Col span={12}><Statistic title=\"Total 24h Volume\" value={millify(globalStats.total24hVolume)}/></Col>\r\n                <Col span={12}><Statistic title=\"Total Markets\" value={millify(globalStats.totalMarkets)}/></Col>\r\n            </Row>\r\n           <div className=\"home-heading-container\">\r\n               <Title level={2} className=\"home-title\">Top 10 Cryptocurrencies in the world</Title>\r\n               <Title level={3} className=\"show-more\"><Link to=\"/cryptocurrencies\">Show more</Link></Title>\r\n           </div>\r\n           <Cryptocurrencies simplified />\r\n           <div className=\"home-heading-container\">\r\n               <Title level={2} className=\"home-title\">Latest Crypto News</Title>\r\n               <Title level={3} className=\"show-more\"><Link to=\"/news\">Show more</Link></Title>\r\n           </div>\r\n           <News simplified />\r\n       </>\r\n    );\r\n};\r\n\r\nexport default HomePage;","import React from 'react';\r\nimport millify from 'millify';\r\nimport { Collapse, Row, Col, Typography, Avatar } from 'antd';\r\nimport HTMLReactParser from 'html-react-parser';\r\n\r\nimport { useGetExchangesQuery } from '../services/cryptoApi';\r\nimport Loader from './Loader';\r\n\r\nconst { Text } = Typography;\r\nconst { Panel } = Collapse;\r\n\r\nconst Exchanges = () => {\r\n    const { data, isFetching } = useGetExchangesQuery();\r\n    const exchangesList = data?.data?.exchanges;\r\n\r\n    if (isFetching) return <Loader />;\r\n\r\n    return (\r\n        <>\r\n            <Row>\r\n                <Col span={6}>Exchanges</Col>\r\n                <Col span={6}>24h Trade Volume</Col>\r\n                <Col span={6}>Markets</Col>\r\n                <Col span={6}>Change</Col>\r\n            </Row>\r\n            <Row>\r\n                {exchangesList.map((exchange) => (\r\n                    <Col span={24}>\r\n                        <Collapse>\r\n                            <Panel\r\n                                key={exchange.id}\r\n                                showArrow={false}\r\n                                header={(\r\n                                    <Row key={exchange.id}>\r\n                                        <Col span={6}>\r\n                                            <Text><strong>{exchange.rank}.</strong></Text>\r\n                                            <Avatar className=\"exchange-image\" src={exchange.iconUrl} />\r\n                                            <Text><strong>{exchange.name}</strong></Text>\r\n                                        </Col>\r\n                                        <Col span={6}>${millify(exchange.volume)}</Col>\r\n                                        <Col span={6}>{millify(exchange.numberOfMarkets)}</Col>\r\n                                        <Col span={6}>{millify(exchange.marketShare)}%</Col>\r\n                                    </Row>\r\n                                )}\r\n                            >\r\n                                {HTMLReactParser(exchange.description || '')}\r\n                            </Panel>\r\n                        </Collapse>\r\n                    </Col>\r\n                ))}\r\n            </Row>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default Exchanges;","import React, {useState, useEffect} from 'react';\r\nimport millify from \"millify\";\r\nimport {Link} from \"react-router-dom\"\r\nimport {Card, Row, Col, Input} from 'antd'\r\n\r\nimport {useGetCryptosQuery} from \"../services/cryptoApi\";\r\nimport Loader from \"./Loader\";\r\n\r\nconst Cryptocurrencies = ({simplified}) => {\r\n    const count = simplified ? 10 : 100;\r\n    const {data: cryptosList, isFetching} = useGetCryptosQuery(count);\r\n    const [cryptos, setCryptos] = useState([]);\r\n    const [searchTerm, setSearchTerm] = useState('');\r\n    useEffect(() => {\r\n\r\n        const filteredData = cryptosList?.data?.coins.filter((coin) => coin.name.toLowerCase().includes(searchTerm.toLowerCase()));\r\n\r\n        setCryptos(filteredData);\r\n\r\n    }, [cryptosList, searchTerm]);\r\n    if (isFetching) return <Loader />;\r\n    return (\r\n        <>\r\n            {!simplified && (\r\n                <div className=\"search-crypto\">\r\n                    <Input placeholder=\"Search Cryptocurrency\" value={searchTerm} onChange={(e) => setSearchTerm(e.target.value)} />\r\n                </div>\r\n            )}\r\n            <Row gutter={[32, 32]} className=\"crypto-card-container\">\r\n                {cryptos?.map((currency) => (\r\n                    <Col xs={24} sm={12} lg={6} className=\"crypto-card\" key={currency.id}>\r\n                        <Link to={`/crypto/${currency.id}`}>\r\n                            <Card\r\n                                title={`${currency.rank}. ${currency.name}`}\r\n                                extra={<img className=\"crypto-image\" src={currency.iconUrl}/>}\r\n                                hoverable\r\n                            >\r\n                                <p>Price: {millify(currency.price)}</p>\r\n                                <p>Market Cap: {millify(currency.marketCap)}</p>\r\n                                <p>Daily Change: {millify(currency.change)}%</p>\r\n                            </Card>\r\n                        </Link>\r\n                    </Col>\r\n                ))}\r\n            </Row>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default Cryptocurrencies;","import React from 'react';\r\nimport { Line } from 'react-chartjs-2';\r\nimport { Chart as ChartJS } from 'chart.js/auto'\r\nimport { Col, Row, Typography } from 'antd';\r\n\r\nconst { Title } = Typography;\r\n\r\nconst LineChart = ({ coinHistory, currentPrice, coinName }) => {\r\n    const coinPrice = [];\r\n    const coinTimestamp = [];\r\n\r\n    for (let i = 0; i < coinHistory?.data?.history?.length; i++) {\r\n        coinPrice.push(coinHistory?.data?.history[i].price);\r\n        coinTimestamp.push(new Date(coinHistory?.data?.history[i].timestamp).toLocaleDateString());\r\n    }\r\n\r\n    const data = {\r\n        labels: coinTimestamp,\r\n        datasets: [\r\n            {\r\n                label: 'Price In USD',\r\n                data: coinPrice,\r\n                fill: false,\r\n                backgroundColor: '#0071bd',\r\n                borderColor: '#0071bd',\r\n            },\r\n        ],\r\n    };\r\n\r\n    const options = {\r\n        scales: {\r\n            yAxes: [\r\n                {\r\n                    ticks: {\r\n                        beginAtZero: true,\r\n                    },\r\n                },\r\n            ],\r\n        },\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <Row className=\"chart-header\">\r\n                <Title level={2} className=\"chart-title\">{coinName} Price Chart </Title>\r\n                <Col className=\"price-container\">\r\n                    <Title level={5} className=\"price-change\">Change: {coinHistory?.data?.change}%</Title>\r\n                    <Title level={5} className=\"current-price\">Current {coinName} Price: $ {currentPrice}</Title>\r\n                </Col>\r\n            </Row>\r\n            <Line data={data} options={options} />\r\n        </>\r\n    );\r\n};\r\n\r\nexport default LineChart;","import React, {useState} from 'react';\r\nimport HTMLReactParser from \"html-react-parser\";\r\nimport {useParams} from 'react-router-dom';\r\nimport millify from \"millify\";\r\nimport {Col, Row, Typography, Select} from \"antd\";\r\nimport {\r\n    MoneyCollectOutlined,\r\n    DollarCircleOutlined,\r\n    FundOutlined,\r\n    ExclamationCircleOutlined,\r\n    StopOutlined,\r\n    TrophyOutlined,\r\n    CheckOutlined,\r\n    NumberOutlined,\r\n    ThunderboltOutlined\r\n} from '@ant-design/icons';\r\n\r\nimport {\r\n    useGetCryptoDetailsQuery,\r\n    useGetCryptoHistoryQuery\r\n} from '../services/cryptoApi';\r\nimport LineChart from \"./LineChart\";\r\nimport Loader from \"./Loader\";\r\nconst { Title, Text } = Typography;\r\nconst {Option} = Select;\r\n\r\nconst CryptoDetails = () => {\r\n    const {coinId} = useParams();\r\n    const [timeperiod, setTimePeriod] = useState('7d');\r\n    const {data, isFetching} = useGetCryptoDetailsQuery(coinId);\r\n    const { data: coinHistory } = useGetCryptoHistoryQuery({ coinId, timeperiod });\r\n    const cryptoDetails = data?.data?.coin;\r\n\r\n    if (isFetching) return <Loader />;\r\n\r\n    const time = ['3h', '24h', '7d', '30d', '1y', '3m', '3y', '5y'];\r\n\r\n    const stats = [\r\n        { title: 'Price to USD', value: `$ ${cryptoDetails.price && millify(cryptoDetails.price)}`, icon: <DollarCircleOutlined /> },\r\n        { title: 'Rank', value: cryptoDetails.rank, icon: <NumberOutlined /> },\r\n        { title: '24h Volume', value: `$ ${cryptoDetails.volume && millify(cryptoDetails.volume)}`, icon: <ThunderboltOutlined /> },\r\n        { title: 'Market Cap', value: `$ ${cryptoDetails.marketCap && millify(cryptoDetails.marketCap)}`, icon: <DollarCircleOutlined /> },\r\n        { title: 'All-time-high(daily avg.)', value: `$ ${millify(cryptoDetails.allTimeHigh.price)}`, icon: <TrophyOutlined /> },\r\n    ];\r\n\r\n    const genericStats = [\r\n        { title: 'Number Of Markets', value: cryptoDetails.numberOfMarkets, icon: <FundOutlined /> },\r\n        { title: 'Number Of Exchanges', value: cryptoDetails.numberOfExchanges, icon: <MoneyCollectOutlined /> },\r\n        { title: 'Aprroved Supply', value: cryptoDetails.approvedSupply ? <CheckOutlined /> : <StopOutlined />, icon: <ExclamationCircleOutlined /> },\r\n        { title: 'Total Supply', value: `$ ${millify(cryptoDetails.totalSupply)}`, icon: <ExclamationCircleOutlined /> },\r\n        { title: 'Circulating Supply', value: `$ ${millify(cryptoDetails.circulatingSupply)}`, icon: <ExclamationCircleOutlined /> },\r\n    ];\r\n\r\n    return (\r\n        <Col className=\"coin-detail-container\">\r\n            <Col className=\"coin-heading-container\">\r\n                <Title level={2} className=\"coin-name\">\r\n                    {data?.data?.coin.name} ({data?.data?.coin.slug}) Price\r\n                </Title>\r\n                <p>{cryptoDetails.name} live price in US Dollar (USD). View value statistics, market cap and supply.</p>\r\n            </Col>\r\n            <Select\r\n                defaultValue=\"7d\"\r\n                className=\"select-timeperiod\"\r\n                placeholder=\"Select Timeperiod\"\r\n                onChange={(value) => setTimePeriod(value)}\r\n            >\r\n                {time.map((date) => <Option key={date}>{date}</Option>)}\r\n            </Select>\r\n            <LineChart\r\n                coinHistory={coinHistory}\r\n                currentPrice={millify(cryptoDetails.price)}\r\n                coinName={cryptoDetails.name}\r\n            />\r\n            <Col className=\"stats-container\">\r\n                <Col className=\"coin-value-statistics\">\r\n                    <Col className=\"coin-value-statistics-heading\">\r\n                        <Title level={3} className=\"coin-details-heading\">{cryptoDetails.name} Value Statistics</Title>\r\n                        <p>An overview showing the statistics of {cryptoDetails.name}, such as the base and quote currency, the rank, and trading volume.</p>\r\n                    </Col>\r\n                    {stats.map(({ icon, title, value }) => (\r\n                        <Col className=\"coin-stats\">\r\n                            <Col className=\"coin-stats-name\">\r\n                                <Text>{icon}</Text>\r\n                                <Text>{title}</Text>\r\n                            </Col>\r\n                            <Text className=\"stats\">{value}</Text>\r\n                        </Col>\r\n                    ))}\r\n                </Col>\r\n                <Col className=\"other-stats-info\">\r\n                    <Col className=\"coin-value-statistics-heading\">\r\n                        <Title level={3} className=\"coin-details-heading\">Other Stats Info</Title>\r\n                        <p>An overview showing the statistics of {cryptoDetails.name}, such as the base and quote currency, the rank, and trading volume.</p>\r\n                    </Col>\r\n                    {genericStats.map(({ icon, title, value }) => (\r\n                        <Col className=\"coin-stats\">\r\n                            <Col className=\"coin-stats-name\">\r\n                                <Text>{icon}</Text>\r\n                                <Text>{title}</Text>\r\n                            </Col>\r\n                            <Text className=\"stats\">{value}</Text>\r\n                        </Col>\r\n                    ))}\r\n                </Col>\r\n            </Col>\r\n            <Col className=\"coin-desc-link\">\r\n                <Row className=\"coin-desc\">\r\n                    <Title level={3} className=\"coin-details-heading\">What is {cryptoDetails.name}?</Title>\r\n                    {HTMLReactParser(cryptoDetails.description)}\r\n                </Row>\r\n                <Col className=\"coin-links\">\r\n                    <Title level={3} className=\"coin-details-heading\">{cryptoDetails.name} Links</Title>\r\n                    {cryptoDetails.links?.map((link) => (\r\n                        <Row className=\"coin-link\" key={link.name}>\r\n                            <Title level={5} className=\"link-name\">{link.type}</Title>\r\n                            <a href={link.url} target=\"_blank\" rel=\"noreferrer\">{link.name}</a>\r\n                        </Row>\r\n                    ))}\r\n                </Col>\r\n            </Col>\r\n        </Col>\r\n    );\r\n};\r\n\r\nexport default CryptoDetails;","import React from 'react';\r\nimport {Switch, Route, Link} from 'react-router-dom';\r\nimport {Layout, Typography, Space} from 'antd';\r\n\r\nimport \"./App.css\";\r\n\r\nimport {Navbar, Exchanges, HomePage, Cryptocurrencies,CryptoDetails, News} from \"./componets\";\r\n\r\nconst App = () => {\r\n    return (\r\n        <div className=\"app\">\r\n            <div className=\"navbar\">\r\n                <Navbar />\r\n            </div>\r\n            <div className=\"main\">\r\n               <Layout>\r\n                   <div className=\"routes\">\r\n                     <Switch>\r\n                         <Route exact path=\"/\">\r\n                             <HomePage/>\r\n                         </Route>\r\n                         <Route exact path=\"/exchanges\">\r\n                             <Exchanges />\r\n                         </Route>\r\n                         <Route exact path=\"/cryptocurrencies\">\r\n                             <Cryptocurrencies />\r\n                         </Route>\r\n                         <Route exact path=\"/crypto/:coinId\">\r\n                             <CryptoDetails />\r\n                         </Route>\r\n                         <Route exact path=\"/news\">\r\n                             <News />\r\n                         </Route>\r\n                     </Switch>\r\n                   </div>\r\n               </Layout>\r\n                <div className=\"footer\">\r\n                    <Typography.Title level={5} style={{color: 'white', textAlign: 'center'}}>\r\n                        Cryptoverse <br/>\r\n                        All rights reserved\r\n                    </Typography.Title>\r\n                    <Space>\r\n                        <Link to=\"/\">Home</Link>\r\n                        <Link to=\"/exchenges\">Exchenges</Link>\r\n                        <Link to=\"/news\">News</Link>\r\n                    </Space>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default App;","import {configureStore} from \"@reduxjs/toolkit\";\r\n\r\nimport {cryptoApi} from \"../services/cryptoApi\";\r\nimport {cryptoNewsApi} from \"../services/cryptoNewsApi\";\r\n\r\nexport default configureStore({\r\n    reducer: {\r\n        [cryptoApi.reducerPath]: cryptoApi.reducer,\r\n        [cryptoNewsApi.reducerPath]: cryptoNewsApi.reducer,\r\n    },\r\n})","import React from \"react\";\r\nimport ReactDOM from 'react-dom';\r\nimport {BrowserRouter, BrowserRouter as Router} from \"react-router-dom\";\r\nimport {Provider} from \"react-redux\";\r\nimport App from './App';\r\nimport store from './app/store'\r\nimport 'antd/dist/antd.css'\r\n\r\nReactDOM.render(\r\n    <Router>\r\n        <Provider store={store}>\r\n            <App />\r\n        </Provider>\r\n    </Router>,\r\n    document.getElementById('root')\r\n);"],"sourceRoot":""}